# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest build
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Build .whl Package
      run: |
        python -m build
    - name: Save artifact
      uses: actions/upload-artifact@v3
      with:
        name: python-whl
        path: dist/*.whl

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-whl
        path: ./dist
    - name: List Downloaded Files
      run: |
        echo "Files in dist directory:"
        ls -l ./dist
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        tag_name="v0.1.1" # Set your tag version here
        release_name="Release - $tag_name"
        body="Automatic release generated by workflow"
        # 创建 release 并获取上传 URL
        upload_url=$(curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/releases \
          -d "{\"tag_name\":\"$tag_name\",\"name\":\"$release_name\",\"body\":\"$body\",\"draft\":false,\"prerelease\":false}" \
          | jq -r .upload_url | sed -e "s/{?name,label}//")
        # 上传 .whl 文件
        for file in dist/*.whl; do
          echo "Uploading $file"
          curl -X POST \
            -H "Authorization: token $GITHUB_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -F "name=$(basename "$file")" \
            -F "label=Python Wheel Package" \
            -F "file=@$file" \
            "$upload_url"
        done
